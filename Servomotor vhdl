library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;
 
entity servomotor is
    PORT (
        clk   : IN  STD_LOGIC;
        reset : IN  STD_LOGIC;
        posicion   : IN  STD_LOGIC_VECTOR(7 downto 0);
        servo : OUT STD_LOGIC
    );
end servomotor ;
 
architecture Behavioral of servomotor is
    -- Contador de 0 a 800.
    signal cnt : unsigned(11 downto 0);
    -- Señal temporal para generar el PWM.
    signal pwmi: unsigned(8 downto 0);
	 -------------------------------------------------
	 ---  comparador de numeor 
	----///// signal comparador : std_logic_vector(6 downto 0);
begin

  ---//////comparador <= "1011010" when unsigned (posicion) > "1011010" else posicion ; 
    ----------------------------------------------------------
	 -- Valor mínimo debe ser de 1ms.
    pwmi <= unsigned('0' & posicion) + 90;
    -- Proceso del contador, de 0 a 2000.
    contador: process (reset, clk) begin
        if (reset = '1') then
            cnt <= (others => '0');
        elsif rising_edge(clk) then
            if (cnt = 1800) then
                cnt <= (others => '0');
            else
                cnt <= cnt + 1;
            end if;
        end if;
    end process;
    -- Señal de salida para el servomotor.
    servo <= '1' when (cnt < pwmi) else '0';
end Behavioral;
